{"ast":null,"code":"var _jsxFileName = \"/home/infinity/Desktop/tic-react-toe/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(squareNumber) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[squareNumber],\n      onClick: () => this.props.onClick(squareNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  }\n\n  renderRow(rowNumber) {\n    var items = [];\n\n    for (var i = rowNumber * this.props.boardSiz; i < (rowNumber + 1) * 3; i++) {\n      items.push(this.renderSquare(i));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    var rows = [];\n\n    for (var i = 0; i < 3; i++) {\n      rows.push(this.renderRow(i));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      boardSize: 3\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 104,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/infinity/Desktop/tic-react-toe/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","squareNumber","squares","renderRow","rowNumber","items","i","boardSiz","push","render","rows","Game","constructor","state","history","Array","fill","xIsNext","boardSize","handleClick","current","length","slice","calculateWinner","setState","concat","winner","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n  \n    \n  \n  function Square(props) \n  {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n\n\nclass Board extends React.Component {\n    renderSquare( squareNumber ) {\n        return (<Square value={this.props.squares[squareNumber]} onClick = {() => this.props.onClick(squareNumber)} />);\n    }\n\n    renderRow( rowNumber ) {\n        var items = [];\n        for( var i = rowNumber * this.props.boardSiz; i < ( rowNumber + 1 )* 3; i++ ) {\n            items.push( this.renderSquare( i ) );\n        }\n        return (\n            <div className='board-row'>\n                {items}\n            </div>\n        );\n    }\n\n\n  render() {\n      var rows = [];\n      for( var i = 0; i < 3; i++ ) {\n        rows.push( this.renderRow( i ) );\n      }\n    return (\n        <div>\n            {rows}\n        </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n        boardSize: 3,\n    };\n  }\n  handleClick(i){\n    const history = this.state.history;\n    const current = history[history.length-1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares)|| squares[i]){\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{squares: squares,}]),\n      xIsNext: !this.state.xIsNext,\n    });\n    }\n  \n  render() {\n    const history = this.state.history;\n    const current = history[history.length-1];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if (winner){\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          squares = {current.squares}\n          onClick={(i) => this.handleClick(i)}\n           />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\nfunction calculateWinner(squares){\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6],\n  ];\n    for (let i = 0; i<lines.length;i++){\n      const [a,b,c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n        return squares[a];\n      }\n  \n    }\n    return null;\n}\n"]},"metadata":{},"sourceType":"module"}